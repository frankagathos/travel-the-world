{"ast":null,"code":"import _classCallCheck from \"/home/frank/Desktop/Frankos-app-git/travel-the-world-app-GIT/travel-the-world/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/frank/Desktop/Frankos-app-git/travel-the-world-app-GIT/travel-the-world/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/frank/Desktop/Frankos-app-git/travel-the-world-app-GIT/travel-the-world/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/frank/Desktop/Frankos-app-git/travel-the-world-app-GIT/travel-the-world/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/frank/Desktop/Frankos-app-git/travel-the-world-app-GIT/travel-the-world/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/frank/Desktop/Frankos-app-git/travel-the-world-app-GIT/travel-the-world/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/frank/Desktop/Frankos-app-git/travel-the-world-app-GIT/travel-the-world/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Search from './components/Search';\n\nvar isSearched = function isSearched(searchTerm) {\n  return function (item) {\n    return !searchTerm || item.name.toLowerCase().includes(searchTerm.toLowerCase()) || item.region.toLowerCase().includes(searchTerm.toLowerCase()); //important function for the search\n  };\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n    };\n\n    _this.onSearchChange = function (event) {\n      _this.setState({\n        searchTerm: event.target.value //important event.target.value\n\n      });\n    };\n\n    _this.findPhotosNear = function (z) {\n      var query = _this.state.loc_stats.city;\n      var client_id = \"8ed09088a4eb4d257e69127e636984bbf65599f0f00bc9a10a35d759d3f2b7d2\";\n      var photocounter = _this.state.photocounter; //API request  of users country\n\n      fetch(\"https://api.unsplash.com/search/photos?client_id=\".concat(client_id, \"&query=\").concat(query)).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this.setState({\n          city_photo_url: json.results[photocounter].urls.regular,\n          photocounter: _this.state.photocounter + 1,\n          photoresults: \"show photoresults\"\n        });\n      });\n    };\n\n    _this.state = {\n      searchTerm: '',\n      selectedCountry: '',\n      allCountriesStats: [],\n      isLoading: false,\n      results_style: 'show',\n      country_stats_style: 'hide'\n    };\n    _this.onSearchChange = _this.onSearchChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onCountryClick = _this.onCountryClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      }); //API request from country rest full apis startin data\n\n      fetch(\"https://restcountries.eu/rest/v2/all\").then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this2.setState({\n          allCountriesStats: json,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"onCountryClick\",\n    value: function onCountryClick(id) {\n      var isId = function isId(item) {\n        return item.alpha3Code === id;\n      };\n\n      var selectedCountry = this.state.allCountriesStats.filter(isId);\n      this.setState({\n        selectedCountryName: selectedCountry[0].name,\n        selectedCountryArea: selectedCountry[0].area,\n        selectedCountryCapital: selectedCountry[0].capital,\n        selectedCountrySubRegion: selectedCountry[0].subregion,\n        selectedCountrypopulation: selectedCountry[0].population,\n        results_style: 'hide',\n        country_stats_style: 'show'\n      });\n    } //Get photos of selected Country\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      //check if it'loading \n      if (this.state.isLoading) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, \"Loading....\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: this.state.results_style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Search, {\n        onChange: this.onSearchChange,\n        value: this.state.searchTerm,\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, this.state.allCountriesStats.filter(isSearched(this.state.searchTerm)).map(function (item) {\n        return React.createElement(\"div\", {\n          className: \"country-card\",\n          key: item.alpha3Code,\n          onClick: function onClick() {\n            return _this3.onCountryClick(item.alpha3Code);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, \" \", item.name, \" \"), React.createElement(\"div\", {\n          className: \"region\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, item.region), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \" \", React.createElement(\"div\", {\n          className: \"flag-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: item.flag,\n          alt: item.flag,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }))));\n      }))), React.createElement(\"div\", {\n        className: this.state.country_stats_style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, this.state.selectedCountryName, \" cover(s) an area of  \", this.state.selectedCountryArea, \" and the capital is \", this.state.selectedCountryCapital, \".\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), \"It is located in \", this.state.selectedCountrySubRegion, \" and has a population of \", (this.state.selectedCountrypopulation / 1000000).toFixed(2), \" million.\"));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/home/frank/Desktop/Frankos-app-git/travel-the-world-app-GIT/travel-the-world/src/App.js"],"names":["React","Search","isSearched","searchTerm","item","name","toLowerCase","includes","region","App","props","handleSubmit","event","preventDefault","onSearchChange","setState","target","value","findPhotosNear","z","query","state","loc_stats","city","client_id","photocounter","fetch","then","res","json","city_photo_url","results","urls","regular","photoresults","selectedCountry","allCountriesStats","isLoading","results_style","country_stats_style","bind","onCountryClick","id","isId","alpha3Code","filter","selectedCountryName","selectedCountryArea","area","selectedCountryCapital","capital","selectedCountrySubRegion","subregion","selectedCountrypopulation","population","map","flag","toFixed","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css'\nimport Search from './components/Search';\n\n\nconst isSearched =(searchTerm) => {\nreturn function(item) {\nreturn !searchTerm ||\nitem.name.toLowerCase().includes(searchTerm.toLowerCase()) ||  item.region.toLowerCase().includes(searchTerm.toLowerCase());//important function for the search\n}\n}\n\nclass App extends React.Component {\n    \n    constructor(props) {\n super(props);\nthis.state = {\n       searchTerm:'',\n       selectedCountry:'',\n       allCountriesStats:[], \n       isLoading:false,\n       results_style:'show',\n       country_stats_style:'hide',\n   } \nthis.onSearchChange = this.onSearchChange.bind(this);\nthis.onCountryClick = this.onCountryClick.bind(this);\n}\n\n    \n\n \n   componentDidMount(){\n       \n        this.setState({isLoading:true});   \n    //API request from country rest full apis startin data\n    fetch(`https://restcountries.eu/rest/v2/all`)     \n       .then(res => res.json())\n       .then(json => {\n           this.setState ({\n               allCountriesStats:json,\n               isLoading:false,\n           })        \n       })\n   }\n       \n    handleSubmit = (event) => {\n     \n        event.preventDefault();\n                \n    }\n   onSearchChange = (event) => {\n\n         this.setState({\n            searchTerm:event.target.value,//important event.target.value\n        });\n       \n   }\n   \n\n   onCountryClick(id) {\n\n   const isId = item => item.alpha3Code===id;\n\n   const selectedCountry = this.state.allCountriesStats.filter(isId);\n   \n      this.setState({\n            selectedCountryName:selectedCountry[0].name,\n            selectedCountryArea:selectedCountry[0].area,\n            selectedCountryCapital:selectedCountry[0].capital,\n            selectedCountrySubRegion:selectedCountry[0].subregion,\n            selectedCountrypopulation:selectedCountry[0].population,\n            results_style:'hide',\n            country_stats_style:'show',\n        });\n       \n             \n}\n\n        //Get photos of selected Country\n       findPhotosNear = (z) =>{\n        const query= this.state.loc_stats.city;\n        const client_id =\"8ed09088a4eb4d257e69127e636984bbf65599f0f00bc9a10a35d759d3f2b7d2\"  ;\n        let photocounter = this.state.photocounter ; \n          \n        //API request  of users country\n        fetch(`https://api.unsplash.com/search/photos?client_id=${client_id}&query=${query}`)\n         .then(res => res.json())\n         .then(json => {\n            \n\n            this.setState({          \n              \n               city_photo_url:json.results[photocounter].urls.regular,\n                photocounter:this.state.photocounter+1,\n                photoresults:\"show photoresults\"\n            }     \n            )\n        })\n     }\n\n\n    render () {\n        \n        //check if it'loading \n        if(this.state.isLoading){\n                           return <p>Loading....</p>\n                       }\n        return (\n            \n            <div className=\"App\">\n                      <div className={this.state.results_style}>\n                       <Search onChange={this.onSearchChange} value={this.state.searchTerm} onSubmit={this.handleSubmit}></Search> \n                        \n                              \n                         <div>                          \n                                               {this.state.allCountriesStats.filter(isSearched(this.state.searchTerm)).map(item=>\n                            \n                                                        <div className=\"country-card\" key={item.alpha3Code} onClick={() => this.onCountryClick(item.alpha3Code)}>\n                                                           <div> {item.name} </div>\n                                                            <div className=\"region\">{item.region}</div>\n                                                             <div> <div className=\"flag-wrapper\"><img src={item.flag} alt={item.flag}/></div></div>\n                                                                            \n                                                       \n                                                                           \n                                                         </div>\n                                                                                                       \n                                                       ) }\n                       </div>\n                    </div>\n                    <div className={this.state.country_stats_style}>\n                          \n                           {this.state.selectedCountryName} cover(s) an area of  {this.state.selectedCountryArea} and the capital is {this.state.selectedCountryCapital}.<br></br>\n                           It is located in {this.state.selectedCountrySubRegion} and has a population of {(this.state.selectedCountrypopulation/1000000).toFixed(2)} million.\n                          \n                    </div>\n         \n                    \n            </div>\n        )\n    }\n    \n}\n\n\n\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}