{"map":"{\"version\":3,\"sources\":[\"/home/frank/Desktop/Frankos-app-git/travel-the-world-app-GIT/travel-the-world/src/components/Search.js\",\"/home/frank/Desktop/Frankos-app-git/travel-the-world-app-GIT/travel-the-world/src/App.js\",\"/home/frank/Desktop/Frankos-app-git/travel-the-world-app-GIT/travel-the-world/src/serviceWorker.js\",\"/home/frank/Desktop/Frankos-app-git/travel-the-world-app-GIT/travel-the-world/src/index.js\"],\"names\":[\"Search\",\"_this$props\",\"this\",\"props\",\"value\",\"onChange\",\"onSubmit\",\"react_default\",\"a\",\"createElement\",\"placeholder\",\"type\",\"React\",\"Component\",\"App\",\"_this\",\"Object\",\"classCallCheck\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"handleSubmit\",\"event\",\"preventDefault\",\"onSearchChange\",\"setState\",\"searchTerm\",\"target\",\"getNextImage\",\"photocounter\",\"state\",\"TotalPhotos\",\"numberOfPhotos\",\"AllUrls\",\"all_city_urls\",\"city_photo_url\",\"urls\",\"regular\",\"getPreviousImage\",\"firstPrevious\",\"selectedCountry\",\"allCountriesStats\",\"isLoading\",\"results_style\",\"country_stats_style\",\"bind\",\"assertThisInitialized\",\"onCountryClick\",\"_this2\",\"fetch\",\"then\",\"res\",\"json\",\"id\",\"_this3\",\"filter\",\"item\",\"alpha3Code\",\"selectedCountryName\",\"name\",\"selectedCountryArea\",\"area\",\"selectedCountryCapital\",\"capital\",\"selectedCountrySubRegion\",\"subregion\",\"selectedCountrypopulation\",\"population\",\"selectedCountryFlag\",\"flag\",\"z\",\"query\",\"concat\",\"results\",\"length\",\"setInterval\",\"i\",\"console\",\"log\",\"_this4\",\"className\",\"src_components_Search\",\"toLowerCase\",\"includes\",\"region\",\"map\",\"key\",\"onClick\",\"src\",\"alt\",\"toFixed\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\nimport './Search.css';\\n//Search component\\nclass Search extends React.Component {\\n    \\n    render (){\\n        const {\\n            value,\\n            onChange,\\n            onSubmit\\n        } = this.props; //destructuring \\n        \\n        return(\\n                <form onSubmit={onSubmit}>\\n                       <div>Travel the world</div>\\n                       <span>By country or Region </span>\\n                     <div> <input placeholder=\\\"Italy....Asia\\\" type=\\\"text\\\" value={value} onChange={onChange}></input>    </div>    \\n                </form>\\n        )\\n            \\n    }\\n\\n}\\n\\nexport default Search;\",\"import React from 'react';\\nimport './App.css'\\nimport Search from './components/Search';\\n\\n\\nconst isSearched =(searchTerm) => {\\nreturn function(item) {\\nreturn !searchTerm ||\\nitem.name.toLowerCase().includes(searchTerm.toLowerCase()) ||  item.region.toLowerCase().includes(searchTerm.toLowerCase());//important function for the search\\n}\\n}\\n\\nconst startPlayer = (z) => { //peiramata\\n    \\n    setInterval(function(){\\n            for (let i=0; i<z; i++){\\n                var y = 0;\\n        return (\\n         \\n        console.log(y))\\n       \\n    }\\n    },1000);\\n\\n}\\n\\nclass App extends React.Component {\\n    \\n    constructor(props) {\\n super(props);\\nthis.state = {\\n       searchTerm:'',\\n       selectedCountry:'',\\n       allCountriesStats:[], \\n       isLoading:false,\\n       results_style:'show',\\n       country_stats_style:'hide',\\n       photocounter:0,\\n   } \\nthis.onSearchChange = this.onSearchChange.bind(this);\\nthis.onCountryClick = this.onCountryClick.bind(this);\\nthis.getNextImage = this.getNextImage.bind(this);\\n}\\n\\n    \\n\\n \\n   componentDidMount(){\\n       \\n        this.setState({isLoading:true});   \\n    //API request from country rest full apis startin data\\n    fetch(`https://restcountries.eu/rest/v2/all`)     \\n       .then(res => res.json())\\n       .then(json => {\\n           this.setState ({\\n               allCountriesStats:json,\\n               isLoading:false,\\n           })        \\n       })\\n   }\\n       \\n    handleSubmit = (event) => {\\n     \\n        event.preventDefault();\\n                \\n    }\\n   onSearchChange = (event) => {\\n\\n         this.setState({\\n            searchTerm:event.target.value,//important event.target.value\\n        });\\n       \\n   }\\n   \\n\\n   onCountryClick(id) {\\n   const isId = item => item.alpha3Code===id;\\n   const selectedCountry = this.state.allCountriesStats.filter(isId);\\n   \\n      this.setState({\\n          \\n            selectedCountryName:selectedCountry[0].name,\\n            selectedCountryArea:selectedCountry[0].area,\\n            selectedCountryCapital:selectedCountry[0].capital,\\n            selectedCountrySubRegion:selectedCountry[0].subregion,\\n            selectedCountrypopulation:selectedCountry[0].population,\\n            selectedCountryFlag:selectedCountry[0].flag,\\n            results_style:'user-has-chosen',\\n            country_stats_style:'show',\\n            photocounter:1,  \\n        });\\n       \\n       \\n        //Get photos of selected Country using UNSPLASH API\\n        const query= selectedCountry[0].name;\\n        const client_id =\\\"8ed09088a4eb4d257e69127e636984bbf65599f0f00bc9a10a35d759d3f2b7d2\\\";\\n        let photocounter = 0; \\n          \\n        //API request  of users country\\n        fetch(`https://api.unsplash.com/search/photos?client_id=${client_id}&query=${query}`)\\n         .then(res => res.json())\\n         .then(json => {\\n            \\n            \\n            this.setState({          \\n                numberOfPhotos:json.results.length,\\n                city_photo_url:json.results[photocounter].urls.regular,\\n                all_city_urls:json.results,\\n               \\n            }     \\n            )\\n        }) \\n        \\n        startPlayer(10);\\n}\\n\\ngetNextImage = () => {\\n  \\n        let photocounter = this.state.photocounter; \\n        const TotalPhotos = this.state.numberOfPhotos;\\n        const AllUrls = this.state.all_city_urls;\\n    if (TotalPhotos>photocounter){     \\n            this.setState({          \\n                city_photo_url:AllUrls[photocounter].urls.regular,\\n                photocounter:this.state.photocounter+1,\\n            })\\n            }\\n \\n     else{\\n            this.setState({          \\n                city_photo_url:AllUrls[0].urls.regular,\\n                photocounter:1,\\n            })\\n            }\\n                  \\n}\\n\\ngetPreviousImage = () =>{\\n    let photocounter = this.state.photocounter; \\n    const TotalPhotos = this.state.numberOfPhotos;\\n    const AllUrls = this.state.all_city_urls;\\n    \\n    let firstPrevious = true;\\n    if (firstPrevious){\\n        \\n        if(photocounter>1){\\n         this.setState({          \\n                city_photo_url:AllUrls[photocounter-2].urls.regular,\\n                photocounter:this.state.photocounter-1,\\n                })\\n            firstPrevious=false;\\n        }\\n       else {\\n                this.setState({          \\n                city_photo_url:AllUrls[TotalPhotos-1].urls.regular,\\n                photocounter:TotalPhotos,\\n                })\\n            firstPrevious=false;\\n       }\\n    } \\n  \\n    else {\\n                this.setState({          \\n                city_photo_url:AllUrls[photocounter-1].urls.regular,\\n                photocounter:this.state.photocounter-1,\\n            })\\n        \\n          \\n     \\n    }    \\n}\\n    render () {\\n        //check if it'loading \\n        if(this.state.isLoading){\\n                           return <p>Loading....</p>\\n                       }\\n        return (\\n            \\n            <div className=\\\"App\\\">\\n                      <div className={this.state.results_style}>\\n                         <Search onChange={this.onSearchChange} value={this.state.searchTerm} onSubmit={this.handleSubmit}></Search> \\n                        \\n                              \\n                            <div>                          \\n                                               {this.state.allCountriesStats.filter(isSearched(this.state.searchTerm)).map(item=>\\n                            \\n                                                        <div className=\\\"country-card\\\" key={item.alpha3Code} onClick={() => this.onCountryClick(item.alpha3Code)}>\\n                                                            <div> {item.name} </div>\\n                                                            <div className=\\\"region\\\">{item.region}</div>\\n                                                            <div> <div className=\\\"flag-wrapper\\\"><img src={item.flag} alt={item.flag}/></div></div>\\n                                                                            \\n                                                       \\n                                                                           \\n                                                         </div>\\n                                                                                                       \\n                                                       ) }\\n                          </div>\\n                    </div>\\n               \\n                    <div className={this.state.country_stats_style}>\\n                        <div className='selected-flag'><img src={this.state.selectedCountryFlag} alt={this.state.selectedCountryName}></img></div>   \\n                           {this.state.selectedCountryName} cover(s) an area of  {this.state.selectedCountryArea}km².The capital is {this.state.selectedCountryCapital}.<br></br>\\n                           It is located in {this.state.selectedCountrySubRegion} and has a population of {(this.state.selectedCountrypopulation/1000000).toFixed(4)} million.\\n                           \\n                           <div className='photo-wrapper'>\\n                                     <img src={this.state.city_photo_url} alt={this.state.selectedCountryName}></img>\\n                                     \\n                           </div>\\n                        <div>\\n                                 {this.state.photocounter+'/'+this.state.numberOfPhotos}\\n                        </div>\\n                          \\n                           <button onClick={this.getPreviousImage}>PREVIOUS</button>\\n                           <button onClick={this.getNextImage}>NEXT</button>\\n              \\n                          \\n                    </div>\\n         \\n                    \\n            </div>\\n        )\\n    }\\n    \\n}\\n\\n\\n\\n\\n\\nexport default App;\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{15:function(t,e,a){},17:function(t,e,a){},19:function(t,e,a){},21:function(t,e,a){\"use strict\";a.r(e);var n=a(0),o=a.n(n),r=a(8),s=a.n(r),l=(a(15),a(2)),c=a(3),i=a(5),u=a(4),h=a(6),m=a(1),d=(a(17),a(19),function(t){function e(){return Object(l.a)(this,e),Object(i.a)(this,Object(u.a)(e).apply(this,arguments))}return Object(h.a)(e,t),Object(c.a)(e,[{key:\"render\",value:function(){var t=this.props,e=t.value,a=t.onChange,n=t.onSubmit;return o.a.createElement(\"form\",{onSubmit:n},o.a.createElement(\"div\",null,\"Travel the world\"),o.a.createElement(\"span\",null,\"By country or Region \"),o.a.createElement(\"div\",null,\" \",o.a.createElement(\"input\",{placeholder:\"Italy....Asia\",type:\"text\",value:e,onChange:a}),\"    \"))}}]),e}(o.a.Component)),p=function(t){function e(t){var a;return Object(l.a)(this,e),(a=Object(i.a)(this,Object(u.a)(e).call(this,t))).handleSubmit=function(t){t.preventDefault()},a.onSearchChange=function(t){a.setState({searchTerm:t.target.value})},a.getNextImage=function(){var t=a.state.photocounter,e=a.state.numberOfPhotos,n=a.state.all_city_urls;e>t?a.setState({city_photo_url:n[t].urls.regular,photocounter:a.state.photocounter+1}):a.setState({city_photo_url:n[0].urls.regular,photocounter:1})},a.getPreviousImage=function(){var t=a.state.photocounter,e=a.state.numberOfPhotos,n=a.state.all_city_urls,o=!0;o?t>1?(a.setState({city_photo_url:n[t-2].urls.regular,photocounter:a.state.photocounter-1}),o=!1):(a.setState({city_photo_url:n[e-1].urls.regular,photocounter:e}),o=!1):a.setState({city_photo_url:n[t-1].urls.regular,photocounter:a.state.photocounter-1})},a.state={searchTerm:\"\",selectedCountry:\"\",allCountriesStats:[],isLoading:!1,results_style:\"show\",country_stats_style:\"hide\",photocounter:0},a.onSearchChange=a.onSearchChange.bind(Object(m.a)(Object(m.a)(a))),a.onCountryClick=a.onCountryClick.bind(Object(m.a)(Object(m.a)(a))),a.getNextImage=a.getNextImage.bind(Object(m.a)(Object(m.a)(a))),a}return Object(h.a)(e,t),Object(c.a)(e,[{key:\"componentDidMount\",value:function(){var t=this;this.setState({isLoading:!0}),fetch(\"https://restcountries.eu/rest/v2/all\").then(function(t){return t.json()}).then(function(e){t.setState({allCountriesStats:e,isLoading:!1})})}},{key:\"onCountryClick\",value:function(t){var e=this,a=this.state.allCountriesStats.filter(function(e){return e.alpha3Code===t});this.setState({selectedCountryName:a[0].name,selectedCountryArea:a[0].area,selectedCountryCapital:a[0].capital,selectedCountrySubRegion:a[0].subregion,selectedCountrypopulation:a[0].population,selectedCountryFlag:a[0].flag,results_style:\"user-has-chosen\",country_stats_style:\"show\",photocounter:1});var n,o=a[0].name;fetch(\"https://api.unsplash.com/search/photos?client_id=\".concat(\"8ed09088a4eb4d257e69127e636984bbf65599f0f00bc9a10a35d759d3f2b7d2\",\"&query=\").concat(o)).then(function(t){return t.json()}).then(function(t){e.setState({numberOfPhotos:t.results.length,city_photo_url:t.results[0].urls.regular,all_city_urls:t.results})}),n=10,setInterval(function(){for(var t=0;t<n;t++)return console.log(0)},1e3)}},{key:\"render\",value:function(){var t,e=this;return this.state.isLoading?o.a.createElement(\"p\",null,\"Loading....\"):o.a.createElement(\"div\",{className:\"App\"},o.a.createElement(\"div\",{className:this.state.results_style},o.a.createElement(d,{onChange:this.onSearchChange,value:this.state.searchTerm,onSubmit:this.handleSubmit}),o.a.createElement(\"div\",null,this.state.allCountriesStats.filter((t=this.state.searchTerm,function(e){return!t||e.name.toLowerCase().includes(t.toLowerCase())||e.region.toLowerCase().includes(t.toLowerCase())})).map(function(t){return o.a.createElement(\"div\",{className:\"country-card\",key:t.alpha3Code,onClick:function(){return e.onCountryClick(t.alpha3Code)}},o.a.createElement(\"div\",null,\" \",t.name,\" \"),o.a.createElement(\"div\",{className:\"region\"},t.region),o.a.createElement(\"div\",null,\" \",o.a.createElement(\"div\",{className:\"flag-wrapper\"},o.a.createElement(\"img\",{src:t.flag,alt:t.flag}))))}))),o.a.createElement(\"div\",{className:this.state.country_stats_style},o.a.createElement(\"div\",{className:\"selected-flag\"},o.a.createElement(\"img\",{src:this.state.selectedCountryFlag,alt:this.state.selectedCountryName})),this.state.selectedCountryName,\" cover(s) an area of  \",this.state.selectedCountryArea,\"km\\xb2.The capital is \",this.state.selectedCountryCapital,\".\",o.a.createElement(\"br\",null),\"It is located in \",this.state.selectedCountrySubRegion,\" and has a population of \",(this.state.selectedCountrypopulation/1e6).toFixed(4),\" million.\",o.a.createElement(\"div\",{className:\"photo-wrapper\"},o.a.createElement(\"img\",{src:this.state.city_photo_url,alt:this.state.selectedCountryName})),o.a.createElement(\"div\",null,this.state.photocounter+\"/\"+this.state.numberOfPhotos),o.a.createElement(\"button\",{onClick:this.getPreviousImage},\"PREVIOUS\"),o.a.createElement(\"button\",{onClick:this.getNextImage},\"NEXT\")))}}]),e}(o.a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(o.a.createElement(p,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(t){t.unregister()})},9:function(t,e,a){t.exports=a(21)}},[[9,2,1]]]);","extractedComments":[]}